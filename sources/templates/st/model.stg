expandFolderForQuery(folder) ::= <<
dataFolders.push({id:"^folder.Id^", type:"^folder.Class.SimpleName^", name:decodeURL("^folder.Name;format="url-encode"^"), documentation:decodeURL("^folder.Documentation;format="url-encode"^")\});
^folder.Folders:{f |
	dataFoldersContent.push({folderid:"^folder.Id^", contentid:"^f.Id^", contenttype:"^f.Class.SimpleName^"\});
	^expandFolderForQuery(f)^
}^
^folder.Elements:{c |
	dataFoldersContent.push({folderid:"^folder.Id^", contentid:"^c.Id^", contenttype:"^c.Class.SimpleName^"\});
	^if(c.Source)^
		dataRelationships.push({id:"^c.Id^", type:"^c.Class.SimpleName^", specialization:decodeURL("^c.PrimaryProfile.Name;format="url-encode"^"), name:decodeURL("^c.Name;format="url-encode"^"), documentation:decodeURL("^c.Documentation;format="url-encode"^"), sourceid:"^c.Source.Id^", targetid:"^c.Target.Id^"\});
		^c.Properties:{p |
			dataProperties.push({conceptid:"^c.Id^", propkey:decodeURL("^p.Key;format="url-encode"^"), propvalue:decodeURL("^p.Value;format="url-encode"^")\});
		}^
	^elseif(c.ConnectionRouterType)^
		dataViews.push({id:"^c.Id^", type:"^c.Class.SimpleName^", name:decodeURL("^c.Name;format="url-encode"^"), documentation:decodeURL("^c.Documentation;format="url-encode"^")\});
		^c.Properties:{p |
			dataProperties.push({conceptid:"^c.Id^", propkey:decodeURL("^p.Key;format="url-encode"^"), propvalue:decodeURL("^p.Value;format="url-encode"^")\});
		}^
		^expandViewElementsForQuery(c, c.Children)^
		^expandViewRelsForQuery(c, c.Children)^
	^else^
		dataElements.push({id:"^c.Id^", type:"^c.Class.SimpleName^", specialization:decodeURL("^c.PrimaryProfile.Name;format="url-encode"^"), name:decodeURL("^c.Name;format="url-encode"^"), documentation:decodeURL("^c.Documentation;format="url-encode"^")\});
		^c.Properties:{p |
			dataProperties.push({conceptid:"^c.Id^", propkey:decodeURL("^p.Key;format="url-encode"^"), propvalue:decodeURL("^p.Value;format="url-encode"^")\});
		}^
	^endif^
}^
>>

expandViewElementsForQuery(view, children) ::= <<
^children:{c |
	^if(c.ArchimateElement)^
		dataViewsContent.push({viewid:"^view.Id^", contentid:"^c.ArchimateElement.Id^", contenttype:"^c.ArchimateElement.Class.SimpleName^"\});
	^elseif(c.ReferencedModel)^
		dataViewsContent.push({viewid:"^view.Id^", contentid:"^c.ReferencedModel.Id^", contenttype:"^c.ReferencedModel.Class.SimpleName^"\});
	^endif^
	^if(c.Children)^
		^expandViewElementsForQuery(view, c.Children)^		
	^endif^
}^
>>

expandViewRelsForQuery(view, children) ::= <<
^children:{c |
	^if(c.ArchimateElement)^
		^if(c.SourceConnections)^
			^c.SourceConnections:{r |
				^if(r.ArchimateConcept)^
					dataViewsContent.push({viewid:"^view.Id^", contentid:"^r.ArchimateConcept.Id^", contenttype:"^r.ArchimateConcept.Class.SimpleName^"\});
				^endif^
			}^
		^endif^
	^endif^
	^if(c.Children)^
		^expandViewRelsForQuery(view, c.Children)^		
	^endif^
}^
>>

model(element) ::= <<
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html class="frame" lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html;charset=utf-8">
	<title>^element.Name^</title>

	<!-- JQUERY (use 1.x branch to be compatible with IE 6/7/8) -->
	<script type="text/javascript" src="../../lib/jquery/js/jquery-1.11.2.min.js"></script>
	<!-- BOOTSTRAP -->
	<link type="text/css" rel="stylesheet" href="../../lib/bootstrap/css/bootstrap.min.yeti.css">
	<script type="text/javascript" src="../../lib/bootstrap/js/bootstrap-3.3.2.min.js"></script>
	<!-- REPORT SPECIFIC -->
	<link type="text/css" rel="stylesheet" href="../../css/model.css">
	<link type="text/css" rel="stylesheet" href="../../css/i18n.css">
	<script type="text/javascript" src="../../js/frame.js"></script>
	<script type="text/javascript" src="../../js/imageMapResizer.min.js"></script>
</head>

<body>
	<div class="panel panel-default root-panel">
		
		<div class="panel-heading root-panel-heading">
            <!-- Name -->
               <b>^element.Name;format="xml-encode"^</b>
		</div>
		
		<div class="panel-body root-panel-body">
			<div role="tabpanel">
				<!-- Nav tabs -->
				<ul class="nav nav-tabs" role="tablist">
                    <!-- Gallery -->
                    <li role="presentation" class="active"><a href="#gallery" aria-controls="gallery" role="tab" data-toggle="tab" class="i18n-gallery"></a></li>				
				
                    <!-- Purpose -->
                    <li role="presentation"><a href="#documentation" aria-controls="documentation" role="tab" data-toggle="tab" class="i18n-purpose"></a></li>
					
                    <!-- Properties -->
                    <li role="presentation"><a href="#properties" aria-controls="properties" role="tab" data-toggle="tab" class="i18n-properties"></a></li>
					
                    <!-- Model, Query Tab -->
					<li role="presentation"><a href="#query" aria-controls="query" role="tab" data-toggle="tab" class="i18n-query"></a></li>
				</ul>
		
				<!-- Tab panes -->
				<div class="tab-content">
					<div role="tabpanel" class="tab-pane active" id="gallery">
						<div style="min-width: 100%" id="gallery-diagrams">
						^element.DiagramModels:{diagram |  
							<div class="gallery">
							<a target="view" href="../views/^diagram.Id^.html"><img src="../images/^diagram.Id^.png"></a>
							<div class="desc">^diagram.Name^</div>
							</div>
						}^
						</div>
					
					</div>
					<div role="tabpanel" class="tab-pane" id="documentation">
						<div class="convertlinks documentation" style="white-space:pre-wrap">^element.Documentation;format="xml-encode"^^element.Purpose;format="xml-encode"^^element.Content;format="xml-encode"^</div>
					</div>
					<div role="tabpanel" class="tab-pane" id="properties">
						<table class="table table-striped table-hover table-condensed">
							<thead>
								<tr>
									<th class="i18n-name"></th>
									<th class="i18n-value"></th>
								</tr>
							</thead>
							<tbody>
								^element.Properties:{p | <tr><td> ^p.Key;format="xml-encode"^ </td><td class="convertlinks"> <xmp class="no-margin" style="white-space:pre-wrap">^p.Value;format="xml-encode"^</xmp> </td></tr>}^
							</tbody>
						</table>
					</div>
					^if(element.Purpose)^
						<div role="tabpanel" class="tab-pane" id="query">
						<br>
						<style>
						#myprompt {
						    width: 80%;
						    font-family: Consolas,Monaco, monospace;
						}
						</style>
						
						<div id='myconsole'></div>
						
						<p>
							<tt><span id="useid">alasql</span> &gt;</tt> <input id='myprompt' autofocus/> 
						</p>
						
						<script src='../../lib/alasql/alasql.min.js'></script>
						
						<script>
							function decodeURL(s) {
								return decodeURIComponent(s.replace(/\+/g, "%20"));
							}
							
							var first = decodeURI(location.search.substr(1));
						 	alasql.options.logtarget = 'myconsole';
							alasql.prompt('myprompt','useid');
							alasql.prompt('myprompt','useid', first);
							  
							var dataElements = [ ];	  
						  	var dataProperties = [ ];
						 	var dataRelationships = [ ];
						 	var dataViews = [ ];
						 	var dataViewsContent = [ ];
						 	var dataFolders = [ ];
						 	var dataFoldersContent = [ ];
							
							^expandFolderForQuery(element)^
							
						    alasql('CREATE TABLE Elements');
						    alasql('CREATE TABLE Properties');
						    alasql('CREATE TABLE Relationships');
						    alasql('CREATE TABLE Views');
						    alasql('CREATE TABLE ViewsContent');
						    alasql('CREATE TABLE Folders');
						    alasql('CREATE TABLE FoldersContent');
						
						    alasql.tables.Elements.data = dataElements;
						    alasql.tables.Properties.data = dataProperties;
						    alasql.tables.Relationships.data = dataRelationships;
						    alasql.tables.Views.data = dataViews;
						    alasql.tables.ViewsContent.data = dataViewsContent;
						    alasql.tables.Folders.data = dataFolders;
						    alasql.tables.FoldersContent.data = dataFoldersContent;
						</script> 
						</div>
					^endif^
			  </div>
			</div>
		</div>
	</div>
	<script type="text/javascript">imageMapResize();</script>
</body>
</html>
>>
